plugins {
    id 'com.android.library'
    id "org.mozilla.rust-android-gradle.rust-android" version "0.9.2"
}

android {
    ndkVersion '23.0.7421159'
    compileSdkVersion 31
    externalNativeBuild {
        ndkBuild {
            path("jni/Android.mk")
        }
    }
    defaultConfig {
        minSdkVersion 26  // android 8
        targetSdkVersion 31 // android 12
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
    }
}

cargo {
    module  = "./rust"       // Or whatever directory contains your Cargo.toml
    libname = "rust"          // Or whatever matches Cargo.toml's [package] name.
    targets = ["arm", "arm64", "x86", "x86_64"]  // See bellow for a longer list of options
    targetIncludes = ["librust.a"]
}


afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.libraryVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])
    }
}